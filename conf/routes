# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# Partials

GET     /partials/*template         com.impressory.play.controllers.Application.partial(template:String)

# Debugging
GET     /session                    com.impressory.play.controllers.Application.inspectSession
POST    /printit                    com.impressory.play.controllers.Application.printItOut


# Auth
->      /oauth                      handyplayoauth.Routes

POST    /auth/interstitial/register com.impressory.auth.controllers.InterstitialController.registerUser
POST    /auth/interstitial/add      com.impressory.auth.controllers.InterstitialController.addIdentity

POST    /logInUP                    com.impressory.play.controllers.UserController.logInUP
POST    /logInEP                    com.impressory.play.controllers.UserController.logInEP
POST    /signUp                     com.impressory.play.controllers.UserController.signUp
POST    /logOut                     com.impressory.play.controllers.UserController.logOut

# LTI
POST    /course/:id/lti/launch       com.impressory.auth.controllers.LTIAuthController.ltiLaunch(id)

# Non-API routes
GET     /logIn                      com.impressory.play.controllers.Application.viewLogIn
GET     /self                       com.impressory.play.controllers.Application.viewSelf

# Home page
GET     /                           com.impressory.play.controllers.Application.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Self
POST    /self/details               com.impressory.play.controllers.UserController.editDetails
POST    /self/loginDetails          com.impressory.play.controllers.UserController.editLoginDetails
POST    /self/id/remove             com.impressory.play.controllers.UserController.removeIdentity

# Users
POST    /whoami                     com.impressory.play.controllers.UserController.whoAmI
GET     /users/:id                  com.impressory.play.controllers.UserController.user(id:String)
GET     /usernames/:u               com.impressory.play.controllers.UserController.usernameAvailable(u:String)              
POST    /users/findByIds            com.impressory.play.controllers.UserController.findUsersById

# Courses
GET     /courses/listed             com.impressory.play.controllers.CourseController.listedCourses
GET     /courses/my                 com.impressory.play.controllers.CourseController.myCourses
POST    /courses/create             com.impressory.play.controllers.CourseController.createCourse


# Course
GET     /course/:id                 com.impressory.play.controllers.CourseController.get(id)
POST    /course/:id/update          com.impressory.play.controllers.CourseController.update(id)

# Course Invites
GET     /course/:id/invites         com.impressory.play.controllers.CourseController.invites(id)
POST    /course/:id/createInvite    com.impressory.play.controllers.CourseController.createInvite(id)
POST    /course/:id/useInvite       com.impressory.play.controllers.CourseController.useInvite(id)

# Q&A
GET     /course/:cid/qna            com.impressory.play.controllers.QnAController.listQuestions(cid)
POST    /course/:cid/qna/:qid/newAnswer     com.impressory.play.controllers.QnAController.handleAddAnswer(cid, qid)
POST    /course/:cid/qna/:qid/answer/:aid/newComment    com.impressory.play.controllers.QnAController.handleAddAnswerComment(cid, qid, aid)

# Content
GET     /course/:id/content                                 com.impressory.play.controllers.ContentController.contentQuery(id: String, entryId: Option[String] ?= None, adj:Option[String] ?= None, noun:Option[String] ?= None, topic:Option[String] ?= None, site:Option[String] ?= None)
POST    /course/:id/addContent                              com.impressory.play.controllers.ContentController.createContent(id: String)
GET     /course/:courseId/entry/:entryId                    com.impressory.play.controllers.ContentController.entry(courseId: String, entryId: String)
POST    /course/:courseId/entry/:entryId/editTags           com.impressory.play.controllers.ContentController.editTags(courseId: String, entryId: String)
POST    /course/:courseId/entry/:entryId/editItem           com.impressory.play.controllers.ContentController.editItem(courseId: String, entryId: String)
GET     /course/:id/entriesForTopic                         com.impressory.play.controllers.ContentController.entriesForTopic(id: String, topic:Option[String] ?= None)
GET     /course/:id/allEntries                              com.impressory.play.controllers.ContentController.allEntries(id: String)
GET     /course/:id/activity                                com.impressory.play.controllers.ContentController.recentEntries(id: String)
POST    /course/:courseId/entry/:entryId/voteUp             com.impressory.play.controllers.ContentController.voteUp(courseId, entryId)
POST    /course/:courseId/entry/:entryId/voteDown           com.impressory.play.controllers.ContentController.voteDown(courseId, entryId)
POST    /course/:courseId/entry/:entryId/addComment         com.impressory.play.controllers.ContentController.addComment(courseId, entryId)

GET     /whatIsIt                                           com.impressory.play.controllers.ContentController.whatIsIt(code)

# Stats
POST	/pageView                   com.impressory.play.controllers.ViewLogController.addView

# Multiple Choice Poll
POST    /course/:courseId/entry/:entryId/mcPollVote com.impressory.play.controllers.PollController.vote(courseId:String, entryId:String)
POST    /course/:courseId/entry/:entryId/pushMCPoll com.impressory.play.controllers.PollController.pushMCPollToStream(courseId:String, entryId:String)

# EventRoom
GET     /eventRoom/ssevents         com.impressory.play.controllers.EventController.serverSentEvents
POST    /eventRoom/subscribe        com.impressory.play.controllers.EventController.subscribe

POST    /course/:id/chat            com.impressory.play.controllers.EventController.postChatMessage(id: String)
GET     /course/:id/chat/lastFew    com.impressory.play.controllers.EventController.lastFewEvents(id: String)